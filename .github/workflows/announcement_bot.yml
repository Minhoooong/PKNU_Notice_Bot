name: Check University Announcements

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Debug Google Cloud Secrets
      run: |
        if [ -z "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}" ]; then
          echo "❌ GOOGLE_APPLICATION_CREDENTIALS_CONTENT is empty!"
          exit 1
        else
          echo "✅ GOOGLE_APPLICATION_CREDENTIALS_CONTENT is set."
        fi

    - name: Setup Google Cloud Credentials
      env:
        GOOGLE_APPLICATION_CREDENTIALS_CONTENT: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS_CONTENT" | base64 --decode > /tmp/gcloud.json
        ls -lah /tmp/gcloud.json
        echo "✅ Google Cloud Credentials saved successfully."

    - name: Verify Google Cloud Credentials File
      run: |
        if [ -s /tmp/gcloud.json ]; then
          echo "✅ Google Cloud Credentials file exists."
        else
          echo "❌ Google Cloud Credentials file is empty!"
          cat /tmp/gcloud.json  # JSON 파일 내용 출력 (디버깅용)
          exit 1
        fi

    - name: Set environment variable
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcloud.json" >> $GITHUB_ENV

    - name: Run announcement bot script
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        MY_PAT: ${{ secrets.MY_PAT }}
        GOOGLE_APPLICATION_CREDENTIALS_CONTENT: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}
      run: python script.py

    - name: Clean up credentials
      run: rm -f /tmp/gcloud.json
