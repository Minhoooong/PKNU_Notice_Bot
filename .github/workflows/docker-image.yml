name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # GHCR 푸시 권한
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ▼▼▼▼▼ 1. pip 캐시를 위한 경로 설정 ▼▼▼▼▼
      - name: Setup pip cache
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      # ▼▼▼▼▼ 2. requirements.txt를 기반으로 캐시 복원/저장 ▼▼▼▼▼
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Compute lowercase repo
        id: repo
        shell: bash
        run: |
          echo "repository_lowercase=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Log in to GHCR (only on push)
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.repository_lowercase }}
          tags: |
            type=raw,value=latest,enable=${{ github.event_name == 'push' }}
            type=sha,prefix=,suffix=,format=long,enable=${{ github.event_name == 'push' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build (PR는 빌드만 / push는 빌드+푸시)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          # ▼▼▼▼▼ 3. 도커 빌드 시 pip 캐시를 마운트 ▼▼▼▼▼
          cache-from: type=gha
          cache-to: type=gha,mode=max
